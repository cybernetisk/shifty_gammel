<% content_for :title, I18n.t("titles.shifts_calendar") %>

<div id="cal_and_tools">
  <div id="calendar"></div>
  <div id="shift_types">
    <% @shift_types.each do | type | %>
      <div class="shift_type" id="shift_type_<%= type.id %>">
        <h4><%=type.title %></h4>
      </div>
    <% end %>
  </div>
</div>
<style type='text/css'>

#calendar
{
  width:80%;
  float:left;
}

#shift_types
{
  width:20%;
  float:left;
  position:fixed;
  right:0px;
}

#cal_and_tools:after
{
  content:'.';
  display:block;
  clear:both;
  height:0px;
  visibility:hidden;
}

  .shift_type { /* try to mimick the look of a real event */
    margin: 10px 0;
    padding: 2px 4px;
    background: #3366CC;
    color: #fff;
    font-size: .85em;
    cursor: pointer;
    }
    
  #external-events p {
    margin: 1.5em 0;
    font-size: 11px;
    color: #666;
    }
    
  #external-events p input {
    margin: 0;
    vertical-align: middle;
    }
</style>

<script type='text/javascript'>
function fetchTemplate(start, end, callback)
{
  console.log(start, end, callback)

  $.get('/templates/<%= @template.id %>/shifts.json',function(data)
  {
    console.log(data);
    for(var i = 0; i < data.length; i++)
    {
      data[i].start = Date.parse(data[i].start.split("+").shift());
      data[i].end = Date.parse(data[i].stop.split("+").shift());
      data[i].title = data[i].shift_type.title;
      data[i].allDay = false;
    }
    callback(data);
  })
}
$(document).ready(function() {

  $('#shift_types div.shift_type').each(function() {
  
    // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
    // it doesn't need to have a start or end
    var eventObject = {
      shift_type_id: this.id.match(/shift_type_(\d+)/)[1], // use the element's text as the event title
      template_id: <%= @template.id %>
    };
    
    // store the Event Object in the DOM element so we can get to it later
    $(this).data('eventObject', eventObject);
    
    // make the event draggable using jQuery UI
    $(this).draggable({
      zIndex: 999,
      revert: true,      // will cause the event to go back to its
      revertDuration: 0  //  original position after the drag
    });
    
  });




  var date = new Date();
  var d = date.getDate();
  var m = date.getMonth();
  var y = date.getFullYear();
  
  $('#calendar').fullCalendar({
    header: {
      left: '',//prev,next today',
      center: '',//title',
      right: '',//month,agendaWeek,agendaDay'
    },
    year:1970,
    month:0,
    date:1,
    columnFormat:{ week: 'dddd, yyyy-MM-dd' },
    firstDay:4,
    defaultView: 'agendaWeek',
    editable: true,
    events: fetchTemplate,
    eventResize: function(event,dayDelta,minuteDelta,revertFunc) {
      $.post('/template_shifts/' + event.id +".json" , {'_method':'put', 'template_shift[stop]':event.end},
          function(response, status){
            if(status != 'success')
              revertFunc();

          });
    },
    eventDrop: function(event,dayDelta,minuteDelta,allDay,revertFunc) {

      $.post('/template_shifts/' + event.id +".json" , {'_method':'put', 'template_shift[start]':event.start, 'template_shift[stop]':event.end},
          function(response, status){
            if(status != 'success')
              revertFunc();
          });
    },
    droppable: true, // this allows things to be dropped onto the calendar !!!
    drop: function(date, allDay) { // this function is called when something is dropped
    
      // retrieve the dropped element's stored Event Object
      var originalEventObject = $(this).data('eventObject');
      
      // we need to copy it, so that multiple events don't have a reference to the same object
      var copiedEventObject = $.extend({}, originalEventObject);
      
      // assign it the date that was reported
      copiedEventObject.start = date;
      copiedEventObject.allDay = allDay;
      
      // render the event on the calendar
      // the last `true` argument determines if the event "sticks" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)
      //$('#calendar').fullCalendar('renderEvent', copiedEventObject, true);
      
      // is the "remove after drop" checkbox checked?
      //if ($('#drop-remove').is(':checked')) {
        // if so, remove the element from the "Draggable Events" list
      //  $(this).remove();
      //}
      
      $.post('/template_shifts.json', 
            {'template_shift[shift_type_id]':copiedEventObject.shift_type_id, 
              'template_shift[start]':copiedEventObject.start,
              'template_shift[template_id]':copiedEventObject.template_id},
          function(response, status){
            response.start = Date.parse(response.start.split("+").shift());
            response.end = Date.parse(response.stop.split("+").shift());
            response.allDay = false;
            response.title = response.shift_type.title
            $("#calendar").fullCalendar("renderEvent", response, true);
          });
    }

  });
  
});

</script>